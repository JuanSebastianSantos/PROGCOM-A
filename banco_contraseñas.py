{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOY7FTQVX+KnPwSfIMKApqV",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/JuanSebastianSantos/PROGCOM-A/blob/main/banco_contrase%C3%B1as.py\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "9LVjyQN2PVS_"
      },
      "outputs": [],
      "source": [
        "import os\n",
        "import json\n",
        "from cryptography.fernet import Fernet\n",
        "import tkinter as tk\n",
        "from tkinter import simpledialog, messagebox\n",
        "\n",
        "\n",
        "DATA_FILE = 'passwords.json'\n",
        "KEY_FILE = 'key.key'\n",
        "\n",
        "def generate_key():\n",
        "\tkey = Fernet.generate_key()\n",
        "\twith open(KEY_FILE, 'wb') as f:\n",
        "\t\tf.write(key)\n",
        "\treturn key\n",
        "\n",
        "def load_key():\n",
        "\tif not os.path.exists(KEY_FILE):\n",
        "\t\treturn generate_key()\n",
        "\twith open(KEY_FILE, 'rb') as f:\n",
        "\t\treturn f.read()\n",
        "\n",
        "def encrypt_data(data, key):\n",
        "\tf = Fernet(key)\n",
        "\treturn f.encrypt(json.dumps(data).encode())\n",
        "\n",
        "def decrypt_data(token, key):\n",
        "\tf = Fernet(key)\n",
        "\treturn json.loads(f.decrypt(token).decode())\n",
        "\n",
        "def save_passwords(passwords, key):\n",
        "\tencrypted = encrypt_data(passwords, key)\n",
        "\twith open(DATA_FILE, 'wb') as f:\n",
        "\t\tf.write(encrypted)\n",
        "\n",
        "def load_passwords(key):\n",
        "\tif not os.path.exists(DATA_FILE):\n",
        "\t\treturn {}\n",
        "\twith open(DATA_FILE, 'rb') as f:\n",
        "\t\tencrypted = f.read()\n",
        "\treturn decrypt_data(encrypted, key)\n",
        "\n",
        "def add_password(site, username, password, key):\n",
        "\tpasswords = load_passwords(key)\n",
        "\tpasswords[site] = {'username': username, 'password': password}\n",
        "\tsave_passwords(passwords, key)\n",
        "\n",
        "def get_password(site, key):\n",
        "\tpasswords = load_passwords(key)\n",
        "\treturn passwords.get(site)\n",
        "\n",
        "def delete_password(site, key):\n",
        "\tpasswords = load_passwords(key)\n",
        "\tif site in passwords:\n",
        "\t\tdel passwords[site]\n",
        "\t\tsave_passwords(passwords, key)\n",
        "\n",
        "def list_sites(key):\n",
        "\tpasswords = load_passwords(key)\n",
        "\treturn list(passwords.keys())\n",
        "\n",
        "\n",
        "\n",
        "class PasswordManagerGUI:\n",
        "\tdef __init__(self, master):\n",
        "\t\tself.master = master\n",
        "\t\tmaster.title(\"Banco de contraseñas\")\n",
        "\t\tself.key = load_key()\n",
        "\n",
        "\t\tself.frame = tk.Frame(master)\n",
        "\t\tself.frame.pack(padx=10, pady=10)\n",
        "\n",
        "\t\tself.add_btn = tk.Button(self.frame, text=\"Añadir contraseña\", command=self.add_password)\n",
        "\t\tself.add_btn.grid(row=0, column=0, padx=5, pady=5)\n",
        "\n",
        "\t\tself.get_btn = tk.Button(self.frame, text=\"Obtener contraseña\", command=self.get_password)\n",
        "\t\tself.get_btn.grid(row=0, column=1, padx=5, pady=5)\n",
        "\n",
        "\t\tself.delete_btn = tk.Button(self.frame, text=\"Eliminar contraseña\", command=self.delete_password)\n",
        "\t\tself.delete_btn.grid(row=0, column=2, padx=5, pady=5)\n",
        "\n",
        "\t\tself.list_btn = tk.Button(self.frame, text=\"Lista de sitios\", command=self.list_sites)\n",
        "\t\tself.list_btn.grid(row=0, column=3, padx=5, pady=5)\n",
        "\n",
        "\t\tself.output = tk.Text(self.frame, height=10, width=50)\n",
        "\t\tself.output.grid(row=1, column=0, columnspan=4, padx=5, pady=5)\n",
        "\t\tself.output.config(state=tk.DISABLED)\n",
        "\n",
        "\tdef add_password(self):\n",
        "\t\tsite = simpledialog.askstring(\"Sitio\", \"Ingresar nombre del sitio:\")\n",
        "\t\tif not site:\n",
        "\t\t\treturn\n",
        "\t\tusername = simpledialog.askstring(\"Usuario\", \"Ingresar usuario:\")\n",
        "\t\tif not username:\n",
        "\t\t\treturn\n",
        "\t\tpassword = simpledialog.askstring(\"Contraseña\", \"Ingresar contraseña:\", show='*')\n",
        "\t\tif not password:\n",
        "\t\t\treturn\n",
        "\t\tadd_password(site, username, password, self.key)\n",
        "\t\tmessagebox.showinfo(\"Hecho\", \"Contraseña añadida.\")\n",
        "\n",
        "\tdef get_password(self):\n",
        "\t\tsite = simpledialog.askstring(\"Sitio\", \"Ingresar nombre del sitio:\")\n",
        "\t\tif not site:\n",
        "\t\t\treturn\n",
        "\t\tentry = get_password(site, self.key)\n",
        "\t\tself.output.config(state=tk.NORMAL)\n",
        "\t\tself.output.delete(1.0, tk.END)\n",
        "\t\tif entry:\n",
        "\t\t\tself.output.insert(tk.END, f\"Sitio: {site}\\nUsuario: {entry['username']}\\nContraseña: {entry['password']}\\n\")\n",
        "\t\telse:\n",
        "\t\t\tself.output.insert(tk.END, \"Ninguna entrada encontrada.\\n\")\n",
        "\t\tself.output.config(state=tk.DISABLED)\n",
        "\n",
        "\tdef delete_password(self):\n",
        "\t\tsite = simpledialog.askstring(\"Sitio\", \"Entra el nombre del sitio para eliminar:\")\n",
        "\t\tif not site:\n",
        "\t\t\treturn\n",
        "\t\tdelete_password(site, self.key)\n",
        "\t\tmessagebox.showinfo(\"Eliminado\", \"Eliminado si existia.\")\n",
        "\n",
        "\tdef list_sites(self):\n",
        "\t\tsites = list_sites(self.key)\n",
        "\t\tself.output.config(state=tk.NORMAL)\n",
        "\t\tself.output.delete(1.0, tk.END)\n",
        "\t\tif sites:\n",
        "\t\t\tself.output.insert(tk.END, \"Sitios:\\n\" + '\\n'.join(sites))\n",
        "\t\telse:\n",
        "\t\t\tself.output.insert(tk.END, \"Ningun sitio encontrado.\")\n",
        "\t\tself.output.config(state=tk.DISABLED)\n",
        "\n",
        "def main():\n",
        "\troot = tk.Tk()\n",
        "\tapp = PasswordManagerGUI(root)\n",
        "\troot.mainloop()\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "\tmain()\n"
      ]
    }
  ]
}