{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPoI5sjSPRD9n0xa0WN35Ir",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/JuanSebastianSantos/PROGCOM-A/blob/main/dise%C3%B1ar%20juego%20educativo%20en%20pyton\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# juego_matematicas.py\n",
        "import random\n",
        "\n",
        "def pedir_entero(prompt):\n",
        "    \"\"\"\n",
        "    Pide al usuario un n√∫mero entero repetidamente hasta que d√© uno v√°lido.\n",
        "    prompt: texto que se muestra al usuario.\n",
        "    Devuelve: el n√∫mero entero ingresado.\n",
        "    \"\"\"\n",
        "    while True:\n",
        "        entrada = input(prompt).strip()\n",
        "        if entrada == \"\":\n",
        "            print(\"Por favor escribe algo (un n√∫mero).\")\n",
        "            continue\n",
        "        try:\n",
        "            return int(entrada)\n",
        "        except ValueError:\n",
        "            print(\"Entrada inv√°lida. Escribe un n√∫mero entero, por ejemplo: 7\")\n",
        "\n",
        "def elegir_dificultad():\n",
        "    \"\"\"\n",
        "    Permite al usuario escoger una dificultad (1, 2 o 3).\n",
        "    Retorna la opci√≥n elegida (1, 2 o 3).\n",
        "    \"\"\"\n",
        "    print(\"Elige dificultad:\")\n",
        "    print(\"  1) F√°cil (n√∫meros del 1 al 10)\")\n",
        "    print(\"  2) Medio (n√∫meros del 1 al 20)\")\n",
        "    print(\"  3) Dif√≠cil (n√∫meros del 1 al 100)\")\n",
        "    while True:\n",
        "        opcion = pedir_entero(\"Escribe 1, 2 o 3: \")\n",
        "        if opcion in (1, 2, 3):\n",
        "            return opcion\n",
        "        print(\"Opci√≥n inv√°lida. Debes escribir 1, 2 o 3.\")\n",
        "\n",
        "def rango_por_dificultad(dificultad):\n",
        "    \"\"\"\n",
        "    Devuelve una tupla (minimo, maximo) seg√∫n la dificultad.\n",
        "    \"\"\"\n",
        "    if dificultad == 1:\n",
        "        return 1, 10\n",
        "    elif dificultad == 2:\n",
        "        return 1, 20\n",
        "    else:\n",
        "        return 1, 100\n",
        "\n",
        "def generar_pregunta(minimo, maximo):\n",
        "    \"\"\"\n",
        "    Genera una pregunta aleatoria.\n",
        "    Devuelve una tupla (texto_pregunta, respuesta_correcta, a, b, operacion)\n",
        "    donde a y b son los n√∫meros usados y operacion es '+' '-' o '*'.\n",
        "    \"\"\"\n",
        "    a = random.randint(minimo, maximo)\n",
        "    b = random.randint(minimo, maximo)\n",
        "    operacion = random.choice(['+', '-', '*'])\n",
        "    if operacion == '+':\n",
        "        correcta = a + b\n",
        "    elif operacion == '-':\n",
        "        correcta = a - b\n",
        "    else:\n",
        "        correcta = a * b\n",
        "    texto = f\"¬øCu√°nto es {a} {operacion} {b}?\"\n",
        "    return texto, correcta, a, b, operacion\n",
        "\n",
        "def explicar_operacion(a, b, operacion, correcta):\n",
        "    \"\"\"\n",
        "    Da una explicaci√≥n sencilla de c√≥mo obtener la respuesta.\n",
        "    \"\"\"\n",
        "    if operacion == '+':\n",
        "        return f\"Explicaci√≥n: {a} + {b} significa juntar {a} y {b}. Resultado: {correcta}.\"\n",
        "    elif operacion == '-':\n",
        "        return f\"Explicaci√≥n: {a} - {b} significa quitar {b} de {a}. Resultado: {correcta}.\"\n",
        "    else:  # multiplicaci√≥n\n",
        "        if a <= 12 and b <= 12:\n",
        "            # explicaci√≥n por suma repetida cuando los n√∫meros no son grandes\n",
        "            suma_repetida = \" + \".join([str(a)] * b)\n",
        "            return (f\"Explicaci√≥n: {a} √ó {b} es sumar {a} {b} veces: {suma_repetida} = {correcta}.\")\n",
        "        else:\n",
        "            return f\"Explicaci√≥n: {a} √ó {b} significa {a} multiplicado por {b}. Resultado: {correcta}.\"\n",
        "\n",
        "def juego_matematicas():\n",
        "    \"\"\"\n",
        "    Funci√≥n principal: controla el flujo del juego.\n",
        "    \"\"\"\n",
        "    print(\"üéÆ Bienvenido al Juego Educativo de Matem√°ticas üéÆ\")\n",
        "    print(\"Contesta las preguntas. Si no entiendes, la opci√≥n de 'explicar' te ayudar√°.\\n\")\n",
        "\n",
        "    dificultad = elegir_dificultad()\n",
        "    minimo, maximo = rango_por_dificultad(dificultad)\n",
        "\n",
        "    rondas = pedir_entero(\"¬øCu√°ntas preguntas quieres? Escribe un n√∫mero (por ejemplo 5): \")\n",
        "\n",
        "    # Preguntamos si el usuario quiere explicaciones despu√©s de cada pregunta\n",
        "    respuesta_explicar = input(\"¬øQuieres que explique cada resultado despu√©s de responder? (s/n): \").strip().lower()\n",
        "    modo_explicar = respuesta_explicar.startswith('s')\n",
        "\n",
        "    puntos = 0\n",
        "\n",
        "    for i in range(1, rondas + 1):\n",
        "        texto, correcta, a, b, operacion = generar_pregunta(minimo, maximo)\n",
        "        print(f\"\\nPregunta {i} de {rondas}: {texto}\")\n",
        "        respuesta_usuario = pedir_entero(\"Tu respuesta: \")\n",
        "\n",
        "        if respuesta_usuario == correcta:\n",
        "            print(\"‚úÖ Correcto. ¬°Muy bien!\")\n",
        "            puntos += 1\n",
        "        else:\n",
        "            print(f\"‚ùå Incorrecto. La respuesta correcta es {correcta}.\")\n",
        "            if modo_explicar:\n",
        "                print(explicar_operacion(a, b, operacion, correcta))\n",
        "\n",
        "    print(\"\\nüéØ Juego terminado.\")\n",
        "    print(f\"Tu puntaje final: {puntos} / {rondas}\")\n",
        "\n",
        "    # Mensaje final motivador\n",
        "    if puntos == rondas:\n",
        "        print(\"üèÜ ¬°Perfecto! Dominaste las preguntas.\")\n",
        "    elif puntos >= rondas / 2:\n",
        "        print(\"üëç ¬°Buen trabajo! Sigue practicando.\")\n",
        "    else:\n",
        "        print(\"üí™ No te desanimes. Con pr√°ctica mejorar√°s.\")\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    juego_matematicas()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "y_Auku7cML6v",
        "outputId": "a5be5e0d-17dd-4961-f28a-9c54b5488ab6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "üéÆ Bienvenido al Juego Educativo de Matem√°ticas üéÆ\n",
            "Contesta las preguntas. Si no entiendes, la opci√≥n de 'explicar' te ayudar√°.\n",
            "\n",
            "Elige dificultad:\n",
            "  1) F√°cil (n√∫meros del 1 al 10)\n",
            "  2) Medio (n√∫meros del 1 al 20)\n",
            "  3) Dif√≠cil (n√∫meros del 1 al 100)\n"
          ]
        }
      ]
    }
  ]
}