{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNS7mmRkOdeS4zPrcM82OOh",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/JuanSebastianSantos/PROGCOM-A/blob/main/barco.py\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "L3RQLsYxOvR_"
      },
      "outputs": [],
      "source": [
        "import turtle\n",
        "\n",
        "# --- Ventana ---\n",
        "screen = turtle.Screen()\n",
        "screen.setup(600, 400)\n",
        "screen.bgcolor(\"skyblue\")\n",
        "screen.title(\"Barco con bandera clara\")\n",
        "\n",
        "# --- Parámetros (fáciles de ajustar) ---\n",
        "hull_left, hull_right = -120, 120\n",
        "hull_top, hull_bottom = -40, -90\n",
        "mast_x = 0\n",
        "mast_bottom_y = hull_top + 10\n",
        "mast_top_y = 120\n",
        "\n",
        "# --- Agua (fondo inferior) ---\n",
        "water = turtle.Turtle()\n",
        "water.hideturtle()\n",
        "water.penup()\n",
        "water.goto(-300, hull_bottom - 120)\n",
        "water.pendown()\n",
        "water.color(\"deepskyblue\")\n",
        "water.begin_fill()\n",
        "water.goto(300, hull_bottom - 120)\n",
        "water.goto(300, hull_bottom + 20)\n",
        "water.goto(-300, hull_bottom + 20)\n",
        "water.goto(-300, hull_bottom - 120)\n",
        "water.end_fill()\n",
        "water.penup()\n",
        "\n",
        "# --- Casco ---\n",
        "hull = turtle.Turtle()\n",
        "hull.hideturtle()\n",
        "hull.penup()\n",
        "hull.goto(hull_left, hull_top)\n",
        "hull.pendown()\n",
        "hull.color(\"saddlebrown\")\n",
        "hull.fillcolor(\"sienna\")\n",
        "hull.begin_fill()\n",
        "hull.goto(hull_right, hull_top)\n",
        "hull.goto(hull_right - 30, hull_bottom)\n",
        "hull.goto(hull_left + 30, hull_bottom)\n",
        "hull.goto(hull_left, hull_top)\n",
        "hull.end_fill()\n",
        "hull.penup()\n",
        "\n",
        "# --- Cubierta ---\n",
        "deck = turtle.Turtle()\n",
        "deck.hideturtle()\n",
        "deck.penup()\n",
        "deck.goto(hull_left + 20, hull_top)\n",
        "deck.pendown()\n",
        "deck.color(\"peru\")\n",
        "deck.fillcolor(\"burlywood\")\n",
        "deck.begin_fill()\n",
        "deck.goto(hull_right - 20, hull_top)\n",
        "deck.goto(hull_right - 20, hull_top + 12)\n",
        "deck.goto(hull_left + 20, hull_top + 12)\n",
        "deck.goto(hull_left + 20, hull_top)\n",
        "deck.end_fill()\n",
        "deck.penup()\n",
        "\n",
        "# --- Mástil ---\n",
        "mast = turtle.Turtle()\n",
        "mast.hideturtle()\n",
        "mast.penup()\n",
        "mast.goto(mast_x, mast_bottom_y)\n",
        "mast.pendown()\n",
        "mast.color(\"black\")\n",
        "mast.pensize(6)\n",
        "mast.goto(mast_x, mast_top_y)\n",
        "mast.penup()\n",
        "\n",
        "# --- Vela (triángulo unido al mástil) ---\n",
        "sail = turtle.Turtle()\n",
        "sail.hideturtle()\n",
        "sail.penup()\n",
        "sail.color(\"white\")\n",
        "sail.fillcolor(\"white\")\n",
        "# puntos: cima del mástil, base del mástil, punto exterior de la vela\n",
        "top_point = (mast_x, mast_top_y - 10)\n",
        "bottom_point = (mast_x, mast_bottom_y + 20)\n",
        "mid_y = (mast_top_y + mast_bottom_y) / 2\n",
        "outer_point = (mast_x + 140, mid_y - 10)\n",
        "sail.goto(top_point)\n",
        "sail.pendown()\n",
        "sail.begin_fill()\n",
        "sail.goto(bottom_point)\n",
        "sail.goto(outer_point)\n",
        "sail.goto(top_point)\n",
        "sail.end_fill()\n",
        "sail.penup()\n",
        "\n",
        "# --- Bandera (rectángulo + muesca triangular en color fondo) ---\n",
        "flag = turtle.Turtle()\n",
        "flag.hideturtle()\n",
        "flag.penup()\n",
        "flag_color = \"red\"\n",
        "flag_left = mast_x + 8\n",
        "flag_width = 50\n",
        "flag_height = 22\n",
        "flag_top = mast_top_y + flag_height / 2\n",
        "flag_bottom = mast_top_y - flag_height / 2\n",
        "\n",
        "# Rectángulo de la bandera\n",
        "flag.goto(flag_left, flag_top)\n",
        "flag.pendown()\n",
        "flag.color(flag_color)\n",
        "flag.fillcolor(flag_color)\n",
        "flag.begin_fill()\n",
        "flag.goto(flag_left + flag_width, flag_top)\n",
        "flag.goto(flag_left + flag_width, flag_bottom)\n",
        "flag.goto(flag_left, flag_bottom)\n",
        "flag.goto(flag_left, flag_top)\n",
        "flag.end_fill()\n",
        "flag.penup()\n",
        "\n",
        "# Muesca triangular en color de fondo para crear la forma \"swallowtail\"\n",
        "flag.goto(flag_left + flag_width, flag_top)\n",
        "flag.pendown()\n",
        "flag.color(screen.bgcolor())\n",
        "flag.fillcolor(screen.bgcolor())\n",
        "flag.begin_fill()\n",
        "flag.goto(flag_left + flag_width + 18, mast_top_y)   # punta de la muesca\n",
        "flag.goto(flag_left + flag_width, flag_bottom)\n",
        "flag.goto(flag_left + flag_width, flag_top)\n",
        "flag.end_fill()\n",
        "flag.penup()\n",
        "\n",
        "# --- Agujero (ojo) en la cabina para dar más lectura visual ---\n",
        "port = turtle.Turtle()\n",
        "port.hideturtle()\n",
        "port.penup()\n",
        "port.goto(-40, hull_top + 5)\n",
        "port.pendown()\n",
        "port.color(\"black\")\n",
        "port.fillcolor(\"lightblue\")\n",
        "port.begin_fill()\n",
        "port.circle(10)\n",
        "port.end_fill()\n",
        "port.penup()\n",
        "\n",
        "# --- Sol para decorar ---\n",
        "sun = turtle.Turtle()\n",
        "sun.hideturtle()\n",
        "sun.penup()\n",
        "sun.goto(220, 140)\n",
        "sun.color(\"gold\")\n",
        "sun.fillcolor(\"gold\")\n",
        "sun.pendown()\n",
        "sun.begin_fill()\n",
        "sun.circle(30)\n",
        "sun.end_fill()\n",
        "sun.penup()\n",
        "\n",
        "turtle.done()"
      ]
    }
  ]
}