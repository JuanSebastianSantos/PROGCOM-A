{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNFR2/w1AHJ2/rvq/1qwDlj",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/JuanSebastianSantos/PROGCOM-A/blob/main/tren_py.py\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "DOgpz1AQO5vE"
      },
      "outputs": [],
      "source": [
        "import turtle\n",
        "\n",
        "# --- Ventana ---\n",
        "screen = turtle.Screen()\n",
        "screen.setup(900, 400)\n",
        "screen.bgcolor(\"lightsteelblue\")\n",
        "screen.title(\"Tren sencillo con Turtle\")\n",
        "\n",
        "def make_turtle():\n",
        "    t = turtle.Turtle()\n",
        "    t.hideturtle()\n",
        "    t.speed(0)\n",
        "    t.penup()\n",
        "    return t\n",
        "\n",
        "# --- Vías ---\n",
        "rails = make_turtle()\n",
        "rails.goto(-420, -120)\n",
        "rails.pendown()\n",
        "rails.color(\"saddlebrown\")\n",
        "rails.pensize(6)\n",
        "rails.forward(840)  # riel superior\n",
        "rails.penup()\n",
        "\n",
        "rails.goto(-420, -140)\n",
        "rails.pendown()\n",
        "rails.forward(840)  # riel inferior\n",
        "rails.penup()\n",
        "\n",
        "# durmientes\n",
        "sleepers = make_turtle()\n",
        "sleepers.color(\"peru\")\n",
        "x = -380\n",
        "while x < 380:\n",
        "    sleepers.goto(x, -135)\n",
        "    sleepers.setheading(0)\n",
        "    sleepers.pendown()\n",
        "    sleepers.begin_fill()\n",
        "    for _ in range(2):\n",
        "        sleepers.forward(50)\n",
        "        sleepers.right(90)\n",
        "        sleepers.forward(6)\n",
        "        sleepers.right(90)\n",
        "    sleepers.end_fill()\n",
        "    sleepers.penup()\n",
        "    x += 60\n",
        "\n",
        "# --- Función para rectángulo ---\n",
        "def draw_box(x, y, w, h, fill):\n",
        "    t = make_turtle()\n",
        "    t.goto(x, y)\n",
        "    t.pendown()\n",
        "    t.color(\"black\")\n",
        "    t.fillcolor(fill)\n",
        "    t.begin_fill()\n",
        "    for _ in range(2):\n",
        "        t.forward(w)\n",
        "        t.right(90)\n",
        "        t.forward(h)\n",
        "        t.right(90)\n",
        "    t.end_fill()\n",
        "    t.penup()\n",
        "\n",
        "# --- Locomotora ---\n",
        "draw_box(-360, -50, 160, 80, \"firebrick\")   # cuerpo\n",
        "draw_box(-280, -80, 80, -80, \"maroon\")       # cabina superior\n",
        "draw_box(-320, -35, 40, 40, \"dimgray\")     # frente (simula motor)\n",
        "\n",
        "# --- Vagones ---\n",
        "draw_box(-180, -50, 140, 80, \"darkorange\")\n",
        "draw_box(-20, -50, 140, 80, \"goldenrod\")\n",
        "\n",
        "# --- Ruedas ---\n",
        "def draw_wheel(cx, cy, r=18):\n",
        "    w = make_turtle()\n",
        "    w.goto(cx, cy - r)\n",
        "    w.pendown()\n",
        "    w.color(\"black\")\n",
        "    w.fillcolor(\"black\")\n",
        "    w.begin_fill()\n",
        "    w.circle(r)\n",
        "    w.end_fill()\n",
        "    w.penup()\n",
        "\n",
        "# ruedas locomotora\n",
        "draw_wheel(-330, -135, 18)\n",
        "draw_wheel(-260, -135, 18)\n",
        "\n",
        "# ruedas vagón 1\n",
        "draw_wheel(-140, -135, 18)\n",
        "draw_wheel(-80, -135, 18)\n",
        "\n",
        "# ruedas vagón 2\n",
        "draw_wheel(20, -135, 18)\n",
        "draw_wheel(80, -135, 18)\n",
        "\n",
        "# --- Ventanas en vagones ---\n",
        "win = make_turtle()\n",
        "for x in range(-160, 60, 40):  # vagón 1\n",
        "    win.goto(x, 0)\n",
        "    win.pendown()\n",
        "    win.color(\"black\")\n",
        "    win.fillcolor(\"white\")\n",
        "    win.begin_fill()\n",
        "    win.circle(10)\n",
        "    win.end_fill()\n",
        "    win.penup()\n",
        "\n",
        "for x in range(0, -100, 40):  # vagón 2\n",
        "    win.goto(x, 0)\n",
        "    win.pendown()\n",
        "    win.begin_fill()\n",
        "    win.circle(10)\n",
        "    win.end_fill()\n",
        "    win.penup()\n",
        "\n",
        "# --- Chimenea ---\n",
        "chim = make_turtle()\n",
        "chim.goto(-330, -10)\n",
        "chim.pendown()\n",
        "chim.color(\"black\")\n",
        "chim.fillcolor(\"dimgray\")\n",
        "chim.begin_fill()\n",
        "for _ in range(2):\n",
        "    chim.forward(20)\n",
        "    chim.right(90)\n",
        "    chim.forward(40)\n",
        "    chim.right(90)\n",
        "chim.end_fill()\n",
        "chim.penup()\n",
        "\n",
        "# --- Humo ---\n",
        "smoke = make_turtle()\n",
        "smoke.color(\"lightgray\")\n",
        "for dx, dy, r in [(-318, 10, -5), (-308, 20, 14), (-250, 18, 18)]:\n",
        "    smoke.goto(dx, dy)\n",
        "    smoke.pendown()\n",
        "    smoke.begin_fill()\n",
        "    smoke.circle(r)\n",
        "    smoke.end_fill()\n",
        "    smoke.penup()\n",
        "\n",
        "turtle.done()"
      ]
    }
  ]
}